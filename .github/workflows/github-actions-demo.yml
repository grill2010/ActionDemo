name: GitHub Actions Demo
on: [workflow_dispatch]
env:
  GRADLE_USER_HOME: .gradle
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-20.04
    env:
      ORG_GRADLE_PROJECT_GITHUB_USERNAME: ""
      ORG_GRADLE_PROJECT_GITHUB_API_TOKEN: ""
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 8

    - run: sudo sed -i 's/deb http/deb [arch=amd64,i386] http/' /etc/apt/sources.list
    - run: sudo grep "ubuntu.com/ubuntu" /etc/apt/sources.list | sudo tee /etc/apt/sources.list.d/ports.list
    - run: sudo sed -i 's/amd64,i386/armhf,arm64/' /etc/apt/sources.list.d/ports.list
    - run: sudo sed -i 's#http://.*/ubuntu#http://ports.ubuntu.com/ubuntu-ports#' /etc/apt/sources.list.d/ports.list
    - name: Add extra platform architectures
      run: sudo dpkg --add-architecture i386; sudo dpkg --add-architecture armhf; sudo dpkg --add-architecture arm64
    - run: sudo apt-get update || true
    - name: Install build-essential
      run: sudo apt install build-essential
    - name: Install Windows compilers
      run: sudo apt-get -yq install g++-mingw-w64-i686 g++-mingw-w64-x86-64
    - name: Install Linux x86 compilers/libraries
      run: sudo apt-get -yq install gcc-multilib g++-multilib linux-libc-dev:i386
    - name: Install Linux arm32 compilers/libraries
      run: sudo apt-get -yq install gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf binutils-arm-linux-gnueabihf
    - name: Install Linux arm64 compilers/libraries
      run: sudo apt-get -yq install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu binutils-aarch64-linux-gnu
    - name: Download macOS natives
      uses: actions/download-artifact@v3
    - name: Display job status
      run: echo "üçè This job's status is ${{ job.status }}."
